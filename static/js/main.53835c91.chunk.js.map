{"version":3,"sources":["api/fetchWeather.js","App.js","reportWebVitals.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","console","log","searchBTN","className","onSubmit","preventDefault","required","type","placeholder","value","onChange","target","onKeyPress","onClick","main","name","sys","country","Math","round","temp","src","icon","alt","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAOaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IALrB,kDAK8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MARI,sCAGY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sD,eC+DVC,MAhEf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAGMC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACA,UAAVc,EAAEC,IADQ,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAGXS,QAAQC,IAAIV,GACZK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASNQ,EAAS,uCAAG,WAAOJ,GAAP,eAAAd,EAAA,6DACA,EADA,SAGKF,EAAaC,GAHlB,OAGRQ,EAHQ,OAIdS,QAAQC,IAAIV,GACZK,EAAWL,GACXG,EAAS,IANK,2CAAH,sDAef,OACE,sBAAKS,UAAU,iBAAf,UACE,uBAAMA,UAAU,mBAAmBC,SAPvC,SAAsBN,GACpBA,EAAEO,kBAMA,UACE,uBACEC,SAAS,WACTC,KAAK,OACLJ,UAAU,SACVK,YAAY,YACZC,MAAO1B,EACP2B,SAAU,SAACZ,GAAD,OAAOJ,EAASI,EAAEa,OAAOF,QACnCG,WAAYf,IAEd,wBAAQgB,QAASX,EAAW,aAAW,gBAAvC,SAAuD,cAAC,IAAD,CAAUC,UAAU,qBAE5ER,EAAQmB,MACP,sBAAKX,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOR,EAAQoB,OACf,8BAAMpB,EAAQqB,IAAIC,aAEpB,sBAAKd,UAAU,YAAf,UACGe,KAAKC,MAAMxB,EAAQmB,KAAKM,MACzB,2CAEF,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYkB,IAAG,4CAAuC1B,EAAQA,QAAQ,GAAG2B,KAA1D,WAAyEC,IAAK5B,EAAQA,QAAQ,GAAG6B,cAC/H,4BAAI7B,EAAQA,QAAQ,GAAG6B,wBClDpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.53835c91.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"92fc8beeeeb473b28e95be95275d1240\";\r\n\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: \"metric\",\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}","\nimport './App.css';\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport { useState } from 'react';\nimport { MdSearch } from 'react-icons/md'\n\nfunction App() {\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n\n  const search = async (e) => {\n    if(e.key === \"Enter\") {\n      const data = await fetchWeather(query);\n      console.log(data)\n      setWeather(data);\n      setQuery(\"\");\n    }\n  }\n\n  const searchBTN = async (e) => {\n    const clicked = true \n    if(clicked) {\n      const data = await fetchWeather(query);\n      console.log(data)\n      setWeather(data);\n      setQuery(\"\");\n    }\n  }\n\n  function handleSubmit(e){\n    e.preventDefault() // stops default reloading behaviour\n      \n  }\n\n  return (\n    <div className=\"main-container\">\n      <form className=\"search-container\" onSubmit={handleSubmit}>\n        <input \n          required=\"required\"\n          type=\"text\"\n          className=\"search\"\n          placeholder=\"Search...\" \n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyPress={search}\n        />\n        <button onClick={searchBTN} aria-label=\"search button\"><MdSearch className=\"search-icon\"/></button>\n      </form>\n      {weather.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}